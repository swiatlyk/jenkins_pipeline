//initiating groovy script, name can be any
def gv

//defining whole pipeline
pipeline {
  agent {
     node {
       //passed as parameter from "Node and Label parameter" plugin
       label "${REQ_NODE}"
       //customWorkspace '/some/other/path'
     }
  }
  //adding/editing environment variables
  environment {
    SOURCE="${WORKSPACE}"
    DESTINATION="${NODE_SHARE}\\${BUILD_TAG}"
    REQ_NODE="${REQ_NODE}"
}
  //adding/editing environment variables
  parameters {
        //string(name: 'NAME', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

        //text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

        booleanParam(name: 'Parameter present', defaultValue: true, description: 'Is Parameter present on bench')

        choice(name: 'Version_to_build', choices: ["1.20", "1.30", "1.40"], description: 'Pick version')

        //password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
	}
    }
  stages {
    //Mandatory stage to load script and prepare DESTINATION (D:\Share\Build_tag) folder
    stage("Preparing environment") {
      steps {
        script {
          gv = load "script.groovy"
          bat ("mkdir %DESTINATION%")
        }
      }
    }
    stage("Checkout_application and copy to destination") {
      steps {
        script {
          gv.checkoutApplication()
          gv.copySourceDestination()
        }
      }
    }

    stage("Run_precondition_and_application") {
      parallel {
        stage("Run precondition") {
          steps {
            echo "Start precondition"
            script {
              gv.precondition()
            }
          }
        }

        stage("Run application app") {
          steps {
            echo "Start of automated tests"
            script {
              gv.application_exe()
            }
          }
        }

      }
    }
  }
  post { 
    always { 
      echo "I will always run regardless of the completion status of the Pipeline’s or stage’s run."
      echo "Send email"
      echo("Cleaning the dir")
      cleanWs()
    }
    failure {
      echo "I will when job will failure"
      echo "Send email"
      echo("Cleaning the dir")
      cleanWs()
    }
    success {
      echo "I will run when job is success"
      echo "Send email"
      echo("Cleaning the dir")
      cleanWs()
    }
  }
}
